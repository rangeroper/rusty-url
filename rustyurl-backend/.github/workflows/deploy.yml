name: CI/CD Pipeline for RustyURL

on:
  push:
    branches:
      - main

jobs:
  setup_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Navigate to Terraform Directory
      run: cd rustyurl-iac  # Change to the Terraform directory

    - name: Initialize Terraform
      run: terraform init

    - name: Apply Terraform for ECR Only
      run: terraform apply -target=aws_ecr_repository.rustyurl_backend -auto-approve

    - name: Get ECR Repository URL
      id: get_ecr_url
      run: echo "ECR_URL=$(terraform output -raw ecr_repository_url)" >> $GITHUB_ENV

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_URL }}

    - name: Build and push Docker image to ECR
      run: |
        docker build -t rustyurl-backend:latest ./rustyurl-backend
        docker tag rustyurl-backend:latest ${{ env.ECR_URL }}:latest
        docker push ${{ env.ECR_URL }}:latest

    - name: Apply Remaining Terraform Configuration
      run: terraform apply -auto-approve
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}